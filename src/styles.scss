@use "variables" as *;
// Custom Theming for Angular Material
@use '@angular/material' as mat;

@import "@fontsource/roboto/300.css";
@import "@fontsource/roboto/400.css";
@import "@fontsource/roboto/500.css";

@import 'material-icons/iconfont/filled.css';


@import 'photoswipe/dist/photoswipe.css';

.pswp {
  --pswp-root-z-index: 1000
}

.pswp-video-container {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}
.pswp-video {
  width: 100%;
  height: 100%;
  &:focus {
    outline: none;
  }
}

.pswp-audio-container {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

.pswp-audio {
  width: 80%;
}

.pswp-video-placeholder {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.pswp-video ~ .pswp-video-placeholder {
  display: none;
}

.pswp-error-text {
  margin-top: 8px;
  text-align: center;
  display: block;
}

.pswp-error-thumb {
  margin-left: auto;
  margin-right: auto;
  display: block;
}

.pswp__button {
  width: 40px;
  .material-icons {
    color: var(--pswp-icon-color);
    text-shadow: 1px 1px 3px var(--pswp-icon-color-secondary);
  }
}

.pswp__button--custom-close {
  //margin-right: 16px;
}

.pswp__counter {
  margin-left: 0px;
}

.pswp__zoom-level {
  height: 30px;
  margin: 15px 0 0 16px;
  font-size: 14px;
  line-height: 30px;
  color: var(--pswp-icon-color);
  text-shadow: 1px 1px 3px var(--pswp-icon-color-secondary);
  opacity: 0.85;
	user-select: none;
}

.pswp__top-bar {
  padding-left: 16px;
  padding-right: 16px;
}

/* TODO(mdc-migration): Remove legacy-core once all legacy components are migrated*/
//@include mat.legacy-core();

@include mat.core();

//setting up for future theme options
@mixin app-theming($theme) {
  // Extract the palettes you need from the theme definition.
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);

  $foreground: map-get($theme, foreground);

  $background: map-get($theme, background);

  $is-dark: map-get($theme, is-dark);

  @if $is-dark {
    .mat-toolbar.mat-primary {
      background: mat.get-color-from-palette($background, app-bar);
      color: mat.get-color-from-palette($foreground, text);
    }
  }

  // Define any styles affected by the theme.
  .drawer-list-item-active {
    background-color: change-color(mat.get-color-from-palette($primary), $alpha: 0.15) !important;
    color: mat.get-color-from-palette($primary) !important;
    .mat-mdc-list-item-icon {
      color: mat.get-color-from-palette($primary) !important;
    }
  }

  .sidenav-list {
    .mat-mdc-list-item-icon {
      //color: rgba(0, 0, 0, 0.54);
      color: mat.get-color-from-palette($foreground, icon);
      margin-right: 16px;
    }
  }

  .image-grid-supporting-text {
    color: mat.get-color-from-palette($foreground, text) !important;
  }
}


/* TODO(mdc-migration): Remove all-legacy-component-typographies once all legacy components are migrated*/
//@include mat.all-legacy-component-typographies();


@include mat.all-component-typographies();

//@include mat.core-theme($light-theme);
/* TODO(mdc-migration): Remove all-legacy-component-themes once all legacy components are migrated*/
//@include mat.all-legacy-component-themes($light-theme);
@include mat.all-component-themes($light-theme);

@include app-theming($light-theme);

//@include mat.chips-theme($light-theme);

@media (prefers-color-scheme: dark) {
  /* TODO(mdc-migration): Remove all-legacy-component-colors once all legacy components are migrated*/
  //@include mat.all-legacy-component-colors($dark-theme);
  @include mat.all-component-colors($dark-theme);

  @include app-theming($dark-theme);

  //@include mat.chips-color($dark-theme);
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.main-content {
  margin: auto;
  padding: 24px;
  @media (max-width: 599px) {
    padding: 16px;
  }
  //width: 100%;
  max-width: 1920px;
}

body {
  overscroll-behavior: none;
}

.cdk-overlay-container {
  z-index: 10000 !important;
}

.mat-mdc-chip.tag-chip {
  --mdc-chip-elevated-container-color: #{map-get(
  map-get($mat-tag-colors, "default-namespace"),
  "default"
  )};
  --mdc-chip-label-text-color: #{map-get(
    map-get($mat-tag-colors, "default-namespace"),
    "default-contrast"
  )};
  --mdc-chip-with-trailing-icon-trailing-icon-color: #{map-get(
    map-get($mat-tag-colors, "default-namespace"),
    "default-contrast"
  )};
  //font-weight: 400;
  @each $tag, $palette in $mat-tag-colors {
    &.tag-namespace-#{$tag} {
      --mdc-chip-elevated-container-color: #{map-get($palette, "default")};
      --mdc-chip-label-text-color: #{map-get($palette, "default-contrast")};
      --mdc-chip-with-trailing-icon-trailing-icon-color: #{map-get($palette, "default-contrast")};
    }
  }
  &.tag-namespace- {
    --mdc-chip-elevated-container-color: #{map-get(
      map-get($mat-tag-colors, "no-namespace"),
      "default"
    )};
    --mdc-chip-label-text-color: #{map-get(
      map-get($mat-tag-colors, "no-namespace"),
      "default-contrast"
    )};
    --mdc-chip-with-trailing-icon-trailing-icon-color: #{map-get(
      map-get($mat-tag-colors, "no-namespace"),
      "default-contrast"
    )};
  }
  /* TODO(mdc-migration): The following rule targets internal classes of chips that may no longer apply for the MDC version.*/
  
  //height: 100% !important;
}

.tag-color {

  // I HATE CSS
  &.tag-color {
    color: map-get(map-get($mat-tag-colors, "default-namespace"), "default");
  }
  //color: map-get(map-get($mat-tag-colors, "default-namespace"), "default-contrast");
  @each $tag, $palette in $mat-tag-colors {
      &.tag-namespace-#{$tag} {
          color: map-get($palette, "default");
          //color: map-get($palette, "default-contrast");
      }
  }
  &.tag-namespace- {
      color: map-get(map-get($mat-tag-colors, "no-namespace"), "default");
      //color: map-get(map-get($mat-tag-colors, "no-namespace"), "default-contrast");
  }
}

.toolbar-count {
  padding-left: 4px;
  padding-right: 4px;
  overflow: hidden;
  text-overflow: ellipsis;
}

.mat-mdc-button,
.mat-mdc-raised-button,
.mat-mdc-outlined-button,
.mat-mdc-unelevated-button {
  text-transform: uppercase;
}

.file-info-panel {
  width: 720px;
  .mat-bottom-sheet-container {
    min-width: min(100vw, 720px);
  }
}


.virtual-scroll-viewport-full-width {
  .cdk-virtual-scroll-content-wrapper {
    width: 100%;
  }
}

.form-field-spacing {
  @extend .mat-mdc-text-field-wrapper;
}

.text-ellipsis {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

.tag-chip-text {
  width: calc(100%); // calc is important here, do not use "100%" alone
  overflow: hidden;
  text-overflow: ellipsis;
}

.tag-chip {
  //width: fit-content;
  //max-width: 100%;
}

.flex-row {
  display: flex;
  flex-direction: row;
}
.flex-column {
  display: flex;
  flex-direction: column;
}
.fxFlex {
  flex: 1 1 0%;
}

.button-row {
  flex-flow: row wrap;
  display: flex;
  place-content: stretch flex-end;
  align-items: stretch;
  gap: 8px;
}

.pages-tab-group {
  /* TODO(mdc-migration): The following rule targets internal classes of tabs that may no longer apply for the MDC version.*/
  /* TODO(mdc-migration): The following rule targets internal classes of tabs that may no longer apply for the MDC version.*/
  .mat-tab-label {
    max-width: 160px;
    /* TODO(mdc-migration): The following rule targets internal classes of tabs that may no longer apply for the MDC version.*/
    .mat-tab-label-content {
      width: 100%;
      height: 100%;
      overflow: hidden;
      .pages-tab-label-text {
        display: block;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }
  }
}

mat-icon.mat-mdc-card-avatar {
  width: 40px;
  height: 40px;
  font-size: 40px;
}

:root {
  --devtools-color-text-primary: rgb(32 33 36);
  --devtools-color-text-secondary: rgb(95 99 104);
  --devtools-color-text-disabled: rgb(128 134 139);
  --devtools-color-syntax-1: rgb(200 0 0);
  --devtools-color-syntax-2: rgb(136 18 128);
  --devtools-color-syntax-3: rgb(26 26 166);
}

@media (prefers-color-scheme: dark) {
  :root {
    --devtools-color-text-primary: rgb(232 234 237);
    --devtools-color-text-secondary: rgb(154 160 166);
    --devtools-color-text-disabled: rgb(128 134 139);
    --devtools-color-syntax-1: rgb(53 212 199);
    --devtools-color-syntax-2: rgb(93 176 215);
    --devtools-color-syntax-3: rgb(153 128 255);
  }
}

:root {
  --ngx-json-string : var(--devtools-color-syntax-1);
  --ngx-json-number : var(--devtools-color-syntax-3);
  --ngx-json-boolean : var(--devtools-color-syntax-3);
  --ngx-json-date : var(--devtools-color-text-primary);
  --ngx-json-array : var(--devtools-color-text-primary);
  --ngx-json-object : var(--devtools-color-text-primary);
  --ngx-json-function : var(--devtools-color-text-primary);
  --ngx-json-null : var(--devtools-color-text-disabled);
  --ngx-json-null-bg : rgb(0, 0, 0, 0);
  --ngx-json-undefined : var(--color-text-disabled);
  //--ngx-json-toggler : color of toggler
  --ngx-json-key : var(--devtools-color-syntax-2);
  //--ngx-json-separator : color of separators
  --ngx-json-value : var(--devtools-color-text-primary);
  --ngx-json-undefined-key : var(--devtools-color-text-primary);
  //--ngx-json-font-family : font-family
  //--ngx-json-font-family : font-size
}


// Various Material Design overrides

.mat-mdc-chip {
  // restore old font size
  //font-size: 14px;
}
